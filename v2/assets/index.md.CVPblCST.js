import{_ as i,c as a,o as t,aj as n}from"./chunks/framework.CGyjoXvH.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"AMDGPU.jl","text":"Programming AMD GPUs with Julia","actions":[{"theme":"brand","text":"Getting Started","link":"/tutorials/quickstart"},{"theme":"alt","text":"API","link":"/api/devices"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/JuliaGPU/AMDGPU.jl"}],"image":{"src":"/logo.png","alt":"AMDGPU.jl"}}},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),e={name:"index.md"};function l(h,s,p,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h2 id="Install" tabindex="-1">Install <a class="header-anchor" href="#Install" aria-label="Permalink to &quot;Install {#Install}&quot;">​</a></h2><p>Simply add the AMDGPU.jl package to your Julia environment:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;AMDGPU&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="Requirements" tabindex="-1">Requirements <a class="header-anchor" href="#Requirements" aria-label="Permalink to &quot;Requirements {#Requirements}&quot;">​</a></h2><ul><li><p>Julia 1.10+</p></li><li><p>MI300X requires Julia 1.12+</p></li><li><p>64-bit Linux or Windows</p></li><li><p>ROCm 6.0+</p></li></ul><h3 id="Required-software" tabindex="-1">Required software <a class="header-anchor" href="#Required-software" aria-label="Permalink to &quot;Required software {#Required-software}&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">Linux</th><th style="text-align:center;">Windows</th></tr></thead><tbody><tr><td style="text-align:center;"><a href="https://rocm.docs.amd.com/en/latest/deploy/linux/quick_start.html" target="_blank" rel="noreferrer">ROCm</a></td><td style="text-align:center;"><a href="https://rocm.docs.amd.com/en/latest/deploy/windows/quick_start.html" target="_blank" rel="noreferrer">ROCm</a></td></tr><tr><td style="text-align:center;">-</td><td style="text-align:center;"><a href="https://www.amd.com/en/technologies/software" target="_blank" rel="noreferrer">AMD Software: Adrenalin Edition</a></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">On Windows AMD Software</p><p>Adrenalin Edition contains HIP library itself, while ROCm provides support for other functionality.</p></div><div class="tip custom-block"><p class="custom-block-title">On Fedora ROCm packages</p><p>Although not included in the AMD&#39;s list of supported Linux distributions, Fedora provides its own ROCM packages.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo dnf install rocminfo rocblas rocfft rocsparse rocsolver rocrand roctracer miopen rocm-hip-devel</span></span></code></pre></div></div><h2 id="Test" tabindex="-1">Test <a class="header-anchor" href="#Test" aria-label="Permalink to &quot;Test {#Test}&quot;">​</a></h2><p>To ensure that everything works, you can run the test suite:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AMDGPU</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pkg</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pkg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;AMDGPU&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="Example" tabindex="-1">Example <a class="header-anchor" href="#Example" aria-label="Permalink to &quot;Example {#Example}&quot;">​</a></h2><p>Element-wise addition via high-level interface &amp; low-level kernel:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AMDGPU</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vadd!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c, a, b)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> workitemIdx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">workgroupIdx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> workgroupDim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">≤</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       c[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b[i]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   return</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AMDGPU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Int, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AMDGPU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Int, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AMDGPU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Int, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">groupsize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 256</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gridsize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c), groupsize)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@roc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> groupsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">groupsize gridsize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gridsize </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">vadd!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c, a, b)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">≈</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c</span></span></code></pre></div><h2 id="Questions-and-Contributions" tabindex="-1">Questions and Contributions <a class="header-anchor" href="#Questions-and-Contributions" aria-label="Permalink to &quot;Questions and Contributions {#Questions-and-Contributions}&quot;">​</a></h2><p>Usage questions can be posted on the <a href="https://discourse.julialang.org/c/domain/gpu" target="_blank" rel="noreferrer">Julia Discourse forum</a> under the GPU domain and/or in the <code>#gpu</code> channel of the <a href="https://julialang.org/community/" target="_blank" rel="noreferrer">Julia Slack</a>.</p><p>Contributions are very welcome, as are feature requests and suggestions. Please open an <a href="https://github.com/JuliaGPU/AMDGPU.jl/issues" target="_blank" rel="noreferrer">issue</a> if you encounter any problems.</p><h2 id="Acknowledgment" tabindex="-1">Acknowledgment <a class="header-anchor" href="#Acknowledgment" aria-label="Permalink to &quot;Acknowledgment {#Acknowledgment}&quot;">​</a></h2><p>AMDGPU.jl would not have been possible without the work by Tim Besard and contributors to <a href="https://github.com/JuliaGPU/CUDA.jl" target="_blank" rel="noreferrer">CUDA.jl</a> and <a href="https://github.com/maleadt/LLVM.jl" target="_blank" rel="noreferrer">LLVM.jl</a>.</p><h2 id="License" tabindex="-1">License <a class="header-anchor" href="#License" aria-label="Permalink to &quot;License {#License}&quot;">​</a></h2><p>AMDGPU.jl is licensed under the <a href="https://github.com/JuliaGPU/AMDGPU.jl/blob/master/LICENSE.md" target="_blank" rel="noreferrer">MIT License</a>.</p>`,22)]))}const g=i(e,[["render",l]]);export{E as __pageData,g as default};
