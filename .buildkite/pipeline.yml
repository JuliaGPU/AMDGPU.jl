steps:
  - label: "Julia 1.7 - GPUArrays 8"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.7
      - JuliaCI/julia-test#v1.4:
      - JuliaCI/julia-coverage#v1:
          codecov: true
    agents:
      queue: "juliagpu"
      rocm: "*"
      rocmgpu: "gfx908"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 180
    env:
      JULIA_AMDGPU_CORE_MUST_LOAD: "1"
      JULIA_AMDGPU_HIP_MUST_LOAD: "1"

  - label: "Julia 1.7 - GPUArrays 7"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.7
      - JuliaCI/julia-test#v1.4:
          custom_manifest: Manifest.toml.gpuarrays-7
      - JuliaCI/julia-coverage#v1:
          codecov: true
    agents:
      queue: "juliagpu"
      rocm: "*"
      rocmgpu: "gfx908"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 180
    env:
      JULIA_AMDGPU_CORE_MUST_LOAD: "1"
      JULIA_AMDGPU_HIP_MUST_LOAD: "1"

  - label: "Julia 1.7 - GPUArrays 6"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.7
      - JuliaCI/julia-test#v1.4:
          custom_manifest: Manifest.toml.gpuarrays-6
      - JuliaCI/julia-coverage#v1:
          codecov: true
    agents:
      queue: "juliagpu"
      rocm: "*"
      rocmgpu: "gfx908"
    if: build.message !~ /\[skip tests\]/
    timeout_in_minutes: 180
    env:
      JULIA_AMDGPU_CORE_MUST_LOAD: "1"
      JULIA_AMDGPU_HIP_MUST_LOAD: "1"

  - label: "Julia 1.8 - GPUArrays 8"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.8
      - JuliaCI/julia-test#v1.4:
      - JuliaCI/julia-coverage#v1:
          codecov: true
    agents:
      queue: "juliagpu"
      rocm: "*"
      rocmgpu: "*"
    if: build.message !~ /\[skip tests\]/
    command: "julia --project -e 'using Pkg; Pkg.update(); Pkg.build(\"AMDGPU\")'"
    soft_fail: true
    timeout_in_minutes: 180
    env:
      JULIA_AMDGPU_CORE_MUST_LOAD: "1"
      JULIA_AMDGPU_HIP_MUST_LOAD: "1"

  - label: "Julia 1.8 - GPUArrays 8 - No artifacts"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.8
      - JuliaCI/julia-test#v1.4:
      - JuliaCI/julia-coverage#v1:
          codecov: true
    agents:
      queue: "juliagpu"
      rocm: "*"
      rocmgpu: "*"
    if: build.message !~ /\[skip tests\]/
    command: "julia --project -e 'using Pkg; Pkg.update(); Pkg.build(\"AMDGPU\")'"
    soft_fail: true
    timeout_in_minutes: 180
    env:
      JULIA_AMDGPU_CORE_MUST_LOAD: "1"
      JULIA_AMDGPU_HIP_MUST_LOAD: "1"
      JULIA_AMDGPU_DISABLE_ARTIFACTS: "1"

  - label: "Julia 1.9 - GPUArrays 8"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.9-nightly
      - JuliaCI/julia-test#v1.4:
      - JuliaCI/julia-coverage#v1:
          codecov: true
    agents:
      queue: "juliagpu"
      rocm: "*"
      rocmgpu: "*"
    if: build.message !~ /\[skip tests\]/
    command: "julia --project -e 'using Pkg; Pkg.update(); Pkg.build(\"AMDGPU\")'"
    soft_fail: true
    timeout_in_minutes: 180
    env:
      JULIA_AMDGPU_CORE_MUST_LOAD: "1"
      JULIA_AMDGPU_HIP_MUST_LOAD: "1"

  - label: "Julia nightly - GPUArrays 8"
    plugins:
      - JuliaCI/julia#v1:
          version: nightly
      - JuliaCI/julia-test#v1.4:
      - JuliaCI/julia-coverage#v1:
          codecov: true
    agents:
      queue: "juliagpu"
      rocm: "*"
      rocmgpu: "*"
    if: build.message !~ /\[skip tests\]/
    command: "julia --project -e 'using Pkg; Pkg.update(); Pkg.build(\"AMDGPU\")'"
    soft_fail: true
    timeout_in_minutes: 180
    env:
      JULIA_AMDGPU_CORE_MUST_LOAD: "1"
      JULIA_AMDGPU_HIP_MUST_LOAD: "1"

  - label: "Documentation"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.7
    command: |
      julia --project -e '
        println("--- :julia: Instantiating project")
        using Pkg
        Pkg.instantiate()
        Pkg.build()
        Pkg.activate("docs")
        Pkg.instantiate()
        push!(LOAD_PATH, @__DIR__)

        println("+++ :julia: Building documentation")
        include("docs/make.jl")'
    agents:
      queue: "juliagpu"
      rocm: "*"
    if: build.message !~ /\[skip docs\]/
    timeout_in_minutes: 10

env:
  SECRET_CODECOV_TOKEN: "lVqFGgrywYmQrILXBcP8i6TosP+q/W2oTDVLIdkWFWscd/a61oSVb8Tycq3qvngsrdmKU9EevdQo+1x+w7cu4IuTq63ahQc0RFgi4Q29hC52OgN2wFql984Cqq3T96P3jyV0ZljaRT+a+9AY0oWmmCph55amvvQ4DOMq3tfGDbp7gdueQvJmSYQGVT3/9Sjn4/esYppcKBGltQqQX2E7WrHLpnqRmsmjcSeZ/S/+PgPRb4ZnpBecAUP2d/MlPgKfP0ZUGbDlcbGu+ZDZNksxKIYuAlNrWPhpNAro7hACfEk4T5RRpNiwmJyXJZ8LUD8zNYIUKSmHjUtmqhNXgujWXA==;U2FsdGVkX1/v/P2Y7KZsvC55Au6eET37uDE6M5I6J275maix+SMD0EoJQ19cFp/lae+G8V7dvpPGfrh4hj2nOg=="
  SECRET_DOCUMENTER_KEY: "U6oVBq1PrD/sdhH7ux++hQbZ4369GzmoHJpdsMEGnyGaM7peCwlHRO/Q81ZOHpg5Z3V/x5wtN2+NMW3+IfU/7pmUIdX61CjQ7INKBOCmPGz/i9LqW2TDFOK6fpTtqHYNz1nFjVXv7QRzr69/uZMTUM4Rou7vRlMYEJjEfCPDA/JyOK5983BZHgPiEv17WcY7ZilhylkHShkKzcuAF6D39huJiXLWxOWt+qFj8uA6SjDZddt4I0wmwKOBamiTMnxDvsnyzcMj21hm8/pIzZQK/C5DBPjtiayswJ7sYf0V335cak1yql/w0G8iI5hQgvteme09sPCXIvG5w1NPVpLgGw==;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"
